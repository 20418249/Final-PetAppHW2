// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetAppHW2.Data;

#nullable disable

namespace PetAppHW2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetAppHW2.Models.Campaign", b =>
                {
                    b.Property<int>("campaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("campaignId"));

                    b.Property<double>("campaignAmmount")
                        .HasColumnType("float");

                    b.Property<double>("currentAmmount")
                        .HasColumnType("float");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("campaignId");

                    b.ToTable("campaigns");

                    b.HasData(
                        new
                        {
                            campaignId = 1,
                            campaignAmmount = 10000.0,
                            currentAmmount = 50.0,
                            isActive = true,
                            name = "Woof Food Drive"
                        },
                        new
                        {
                            campaignId = 2,
                            campaignAmmount = 12000.0,
                            currentAmmount = 3000.0,
                            isActive = true,
                            name = "Paws for a Cause"
                        },
                        new
                        {
                            campaignId = 3,
                            campaignAmmount = 8000.0,
                            currentAmmount = 1500.0,
                            isActive = true,
                            name = "Meow Mission: Helping Homeless Cats"
                        },
                        new
                        {
                            campaignId = 4,
                            campaignAmmount = 18000.0,
                            currentAmmount = 6000.0,
                            isActive = true,
                            name = "Bark Aid: Shelter Support for Dogs"
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.Donation", b =>
                {
                    b.Property<int>("donationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("donationId"));

                    b.Property<double>("ammount")
                        .HasColumnType("float");

                    b.Property<int>("campaignId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("donationId");

                    b.HasIndex("campaignId");

                    b.HasIndex("userId");

                    b.ToTable("donations");

                    b.HasData(
                        new
                        {
                            donationId = 1,
                            ammount = 50.0,
                            campaignId = 1,
                            userId = 1
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.Gender", b =>
                {
                    b.Property<int>("genderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genderId"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genderId");

                    b.ToTable("genders");

                    b.HasData(
                        new
                        {
                            genderId = 1,
                            description = "Male"
                        },
                        new
                        {
                            genderId = 2,
                            description = "Female"
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.Location", b =>
                {
                    b.Property<int>("locationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("locationId"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("locationId");

                    b.ToTable("locations");

                    b.HasData(
                        new
                        {
                            locationId = 1,
                            name = "Gauteng"
                        },
                        new
                        {
                            locationId = 2,
                            name = "North West"
                        },
                        new
                        {
                            locationId = 3,
                            name = "Limpopo"
                        },
                        new
                        {
                            locationId = 4,
                            name = "Western Cape"
                        },
                        new
                        {
                            locationId = 5,
                            name = "Eastern Cape"
                        },
                        new
                        {
                            locationId = 6,
                            name = "Northern Cape"
                        },
                        new
                        {
                            locationId = 7,
                            name = "Freestate"
                        },
                        new
                        {
                            locationId = 8,
                            name = "Kwazulu Natal"
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.Pet", b =>
                {
                    b.Property<int>("petId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("petId"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int>("genderId")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("locationId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("petBreedId")
                        .HasColumnType("int");

                    b.Property<int>("petTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.Property<double>("weight")
                        .HasColumnType("float");

                    b.HasKey("petId");

                    b.HasIndex("genderId");

                    b.HasIndex("locationId");

                    b.HasIndex("petBreedId");

                    b.HasIndex("petTypeId");

                    b.HasIndex("userId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            petId = 1,
                            age = 6,
                            genderId = 1,
                            image = "iamge placeholder",
                            locationId = 2,
                            name = "Benji",
                            petBreedId = 2,
                            petTypeId = 1,
                            userId = 1,
                            weight = 27.0
                        },
                        new
                        {
                            petId = 2,
                            age = 4,
                            genderId = 2,
                            image = "",
                            locationId = 5,
                            name = "Buddy",
                            petBreedId = 7,
                            petTypeId = 2,
                            userId = 3,
                            weight = 15.5
                        },
                        new
                        {
                            petId = 3,
                            age = 2,
                            genderId = 1,
                            image = "image placeholder",
                            locationId = 4,
                            name = "Luna",
                            petBreedId = 3,
                            petTypeId = 1,
                            userId = 8,
                            weight = 12.800000000000001
                        },
                        new
                        {
                            petId = 4,
                            age = 7,
                            genderId = 2,
                            image = "",
                            locationId = 7,
                            name = "Milo",
                            petBreedId = 9,
                            petTypeId = 2,
                            weight = 19.300000000000001
                        },
                        new
                        {
                            petId = 5,
                            age = 9,
                            genderId = 1,
                            image = "image placeholder",
                            locationId = 1,
                            name = "Max",
                            petBreedId = 5,
                            petTypeId = 1,
                            userId = 5,
                            weight = 21.0
                        },
                        new
                        {
                            petId = 6,
                            age = 12,
                            genderId = 2,
                            image = "",
                            locationId = 3,
                            name = "Daisy",
                            petBreedId = 8,
                            petTypeId = 2,
                            userId = 7,
                            weight = 8.6999999999999993
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.PetBreed", b =>
                {
                    b.Property<int>("petBreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("petBreedId"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("petBreedId");

                    b.ToTable("petBreeds");

                    b.HasData(
                        new
                        {
                            petBreedId = 1,
                            description = "Labrador"
                        },
                        new
                        {
                            petBreedId = 2,
                            description = "German Shepherd"
                        },
                        new
                        {
                            petBreedId = 3,
                            description = "Persian"
                        },
                        new
                        {
                            petBreedId = 4,
                            description = "Burmese"
                        },
                        new
                        {
                            petBreedId = 5,
                            description = "Maine Coon"
                        },
                        new
                        {
                            petBreedId = 6,
                            description = "Siamese"
                        },
                        new
                        {
                            petBreedId = 7,
                            description = "Australian Shepherd"
                        },
                        new
                        {
                            petBreedId = 8,
                            description = "Dalmatian"
                        },
                        new
                        {
                            petBreedId = 9,
                            description = "Yorkshire Terrier"
                        },
                        new
                        {
                            petBreedId = 10,
                            description = "Belgian Malanois"
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.PetType", b =>
                {
                    b.Property<int>("petTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("petTypeId"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("petTypeId");

                    b.ToTable("petTypes");

                    b.HasData(
                        new
                        {
                            petTypeId = 1,
                            description = "Dog"
                        },
                        new
                        {
                            petTypeId = 2,
                            description = "Cat"
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            address = "1282 Boundary Ln, Hatfield, Pretoria",
                            email = "christiaanholm20@gmail.com",
                            name = "Christiaan",
                            phone = "081 481 0285",
                            surname = "Holm"
                        },
                        new
                        {
                            userId = 2,
                            address = "45 Acacia Street, Johannesburg, Gauteng",
                            email = "sophia.vandermerwe@example.com",
                            name = "Sophia",
                            phone = "082 555 9876",
                            surname = "van der Merwe"
                        },
                        new
                        {
                            userId = 3,
                            address = "22 Jacaranda Avenue, Durban, KwaZulu-Natal",
                            email = "alex.smith@example.com",
                            name = "Alex",
                            phone = "071 234 5678",
                            surname = "Smith"
                        },
                        new
                        {
                            userId = 4,
                            address = "78 Protea Road, Cape Town, Western Cape",
                            email = "james.johnson@example.com",
                            name = "James",
                            phone = "084 876 5432",
                            surname = "Johnson"
                        },
                        new
                        {
                            userId = 5,
                            address = "12 Marula Lane, Port Elizabeth, Eastern Cape",
                            email = "emily.brown@example.com",
                            name = "Emily",
                            phone = "083 765 4321",
                            surname = "Brown"
                        },
                        new
                        {
                            userId = 6,
                            address = "9 Baobab Street, Bloemfontein, Free State",
                            email = "liam.khumalo@example.com",
                            name = "Liam",
                            phone = "079 555 8888",
                            surname = "Khumalo"
                        },
                        new
                        {
                            userId = 7,
                            address = "33 Maroela Road, Polokwane, Limpopo",
                            email = "noah.ndlovu@example.com",
                            name = "Noah",
                            phone = "072 444 9999",
                            surname = "Ndlovu"
                        },
                        new
                        {
                            userId = 8,
                            address = "67 Eucalyptus Crescent, Nelspruit, Mpumalanga",
                            email = "ava.williams@example.com",
                            name = "Ava",
                            phone = "076 222 3333",
                            surname = "Williams"
                        },
                        new
                        {
                            userId = 9,
                            address = "5 Protea Avenue, Kimberley, Northern Cape",
                            email = "william.molefe@example.com",
                            name = "William",
                            phone = "073 111 2222",
                            surname = "Molefe"
                        },
                        new
                        {
                            userId = 10,
                            address = "18 Baobab Street, Rustenburg, North West",
                            email = "olivia.clark@example.com",
                            name = "Olivia",
                            phone = "081 333 4444",
                            surname = "Clark"
                        });
                });

            modelBuilder.Entity("PetAppHW2.Models.Donation", b =>
                {
                    b.HasOne("PetAppHW2.Models.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("campaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetAppHW2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetAppHW2.Models.Pet", b =>
                {
                    b.HasOne("PetAppHW2.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("genderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetAppHW2.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetAppHW2.Models.PetBreed", "PetBreed")
                        .WithMany()
                        .HasForeignKey("petBreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetAppHW2.Models.PetType", "PetType")
                        .WithMany()
                        .HasForeignKey("petTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetAppHW2.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("Gender");

                    b.Navigation("Location");

                    b.Navigation("PetBreed");

                    b.Navigation("PetType");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
